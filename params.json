{"name":"Typo","tagline":"Typo is the oldest and most powerful Ruby on Rails blogware, providing custom templates, powerful drag and drop plugins API, advanced SEO capabilities, XMLRPC API and many more.","body":"Typo\r\n====\r\n\r\n### Table of contents\r\n\r\n-   [The missing weblog engine](#themissingweblogengine)\r\n-   [Typo demo](#typodemo)\r\n-   [Download Typo](#downloadtypo)\r\n-   [Install Typo locally](#installtypolocally)\r\n    -   [Prerequisites](#prerequisites)\r\n    -   [Install Typo](#installtypo)\r\n\r\n-   [Install Typo on Heroku](#installtypoonheroku)\r\n    -   [Database](#database)\r\n    -   [Storage](#storage)\r\n    -   [Gemfile](#gemfile)\r\n    -   [Gemfile.lock](#gemfilelock)\r\n\r\n-   [Create a simple theme](#createasimpletheme)\r\n    -   [Header](#createasimplethemeheader)\r\n    -   [Body](#createasimplethemebody)\r\n\r\n-   [Advanced theme creation](#advancedthemecreation)\r\n    -   [Pave the path](#advancedthemecreationpavethepath)\r\n    -   [Create the templates](#advancedthemecreationcreatetemplate)\r\n\r\n-   [Advanced plugins](#advancedplugins)\r\n    -   [Create the plugin](#advancedplugins-createtheplugin)\r\n    -   [Make your code\r\n        accessible](#advancedplugins-makeyourcodeaccessible)\r\n    -   [The routing](#advancedplugins-therouting)\r\n    -   [The models](#advancedplugins-themodels)\r\n    -   [The front](#advancedplugins-thefront)\r\n        -   [Controllers](#advancedplugins-thefront-controllers)\r\n        -   [Views](#advancedplugins-thefront-views)\r\n\r\n    -   [The admin](#advancedplugins-theadmin)\r\n        -   [Add your module](#advancedplugins-theadmin-add-your-module)\r\n        -   [Controllers](#advancedplugins-theadmin-controllers)\r\n        -   [Views](#advancedplugins-theadmin-views)\r\n\r\n-   [Useful links](#usefullinks)\r\n    -   [Enhance your blog](#enhanceyourblog)\r\n    -   [More resources](#moreresources)\r\n    -   [Support](#support)\r\n\r\n-   [Maintainers](#maintainers)\r\n\r\n<a name=\"themissingweblogengine\"></a>\r\n\r\nThe missing weblog engine\r\n-------------------------\r\n\r\nTypo is a modern, lightweight, comprehensive, full featured Weblog\r\nengine using Ruby on Rails. It’s been around since 2004 and probably the\r\noldest open source project based on Ruby on Rails.\r\n\r\nTypo provides you with everything you need to easily publish content on\r\nthe Web.\r\n\r\n**Multi user:** role based management for multiple authors Web sites.\r\n\r\n**Powerful plugin engine:** available both in page, as text filters and\r\nas widgets.\r\n\r\n**Comprehensive theme support:** every aspect of the blog can be\r\nredesigned according to your needs without changing a single line of the\r\ncore engine.\r\n\r\n**Cool API:** Typo supports the various blogging engine APIs so you can\r\npublish from desktop clients.\r\n\r\n**On demand editor:** Typo supports various editors (visual, plain HTML,\r\nMarkdown, Textile)\r\n\r\n**Multilingual**: Typo is (more or less) translated in English, French,\r\nGerman, Danish, Norvegian, Japanese, Hebrew, Simple Chinese, Mexicain\r\nSpanish, Italian, Lituanese, Dutch, Polish, Romanian…\r\n\r\n<a name=\"typodemo\"></a>\r\n\r\nTypo demo\r\n---------\r\n\r\nIf you want to give Typo a try, check out [our full featured\r\ndemo](http://demo.typosphere.org)\r\n\r\nThe login / password [to the admin](http://demo.typosphere.org/admin)\r\nare:\r\n\r\n-   Administrator: admin / admin\r\n-   Publisher: publish / publish\r\n\r\nThe demo is reset every hour.\r\n\r\n<a name=\"downloadtypo\"></a>\r\n\r\nDownload Typo\r\n-------------\r\n\r\nFor a production blog, you should download [download Typo\r\n6.1.4](http://typosphere.org/stable.tgz)\r\n\r\nIf you feel adventurous or want to hack on Typo, [clone Typo\r\nrepository](git://github.com/fdv/typo.git)\r\n\r\n<a name=\"installtypolocally\"></a>\r\n\r\nInstall Typo locally\r\n--------------------\r\n\r\n<a name=\"prerequisites\"></a>\r\n\r\n### Prerequisites\r\n\r\nTo install Typo you need the following:\r\n\r\n-   Ruby 1.9.2 or 1.9.3.\r\n-   Ruby On Rails 3.2.12\r\n-   A database engine, MySQL, PgSQL or SQLite3\r\n\r\n<a href=\"installtypo\"></a>\r\n\r\n### Install Typo\r\n\r\n1.  Unzip Typo archive\r\n2.  Rename database.yml.yourEngine as database.yml\r\n3.  Edit database.yml to add your database name, login and password.\r\n\r\n<!-- -->\r\n\r\n    $ bundle install\r\n    $ rake db:create\r\n    $ ./script/rails server\r\n\r\nYou don’t need to run `rake db:migrate` and `rake db:seed` as Typo will\r\ntake care of everything the first time you access 127.0.0.1:3000.\r\n\r\n<a name=\"installtypoonheroku\"></a>\r\n\r\nInstall Typo on Heroku\r\n----------------------\r\n\r\nIn order to install Typo on Heroku, you’ll need to do some minor tweaks…\r\n\r\n<a name=\"database\"></a>\r\n\r\n### Database\r\n\r\nJust add the Heroku Postgres plugin to your app. When deploying, Heroku\r\nwill write the database configuration so you don’t have to do anything.\r\n\r\n<a name=\"storage\"></a>\r\n\r\n### Storage\r\n\r\nYou need to setup Amazon s3 storage to be able to upload files on your\r\nblog. Edit `config/storage.yml`\r\n\r\n    provider: AWS\r\n    engine: AWS\r\n    aws_access_key_id: YOUR_AWS_ACCESS_KEY_ID\r\n    aws_secret_access_key: YOUR_AWS_SECRET_ACCESS_KEY\r\n    aws_bucket: YOUR_AWS_BUCKET_NAME\r\n\r\n<a name=\"gemfile\"></a>\r\n\r\n### Gemfile\r\n\r\nReplace the default `Gemfile` by `Gemfile.heroku` :\r\n`cp Gemfile Gemfile.heroku`.\r\nHeroku may also need the Ruby version to be declared. You may add\r\n`ruby \"1.9.3\"` after the source to use the latest Ruby version.\r\n\r\nHeroku will also boot your app on Webrick, the default Ruby web server,\r\nwhich is rather slow. Just add thin to get some free speed.\r\n\r\nNow, run\r\n\r\n    bundle install\r\n\r\n<a name=\"gemfilelock\"></a>\r\n\r\n### Gemfile.lock\r\n\r\nHeroku needs Gemfile.lock to be in the Git repository. Remove\r\nGemfile.lock from .gitignore and add it `git add .gitignore\r\nGemfile.lock`\r\n\r\n<a name=\"createasimpletheme\"></a>\r\n\r\nCreate a simple theme\r\n---------------------\r\n\r\nTypo offers a very slick and evolved theme engine. It allows theme\r\ndevelopers to override every view of the application, or just add their\r\nown layout, stylesheet, and let Typo do the job.\r\n\r\nA Typo template is made with a *minimum* of three main files:\r\n\r\n-   The layout.\r\n-   A CSS stylesheet.\r\n-   An about file using Markdown.\r\n-   You can eventually add a screenshot, and some fancy pictures in your\r\n    theme, but they are not mandatory.\r\n\r\nBrowsing a default Typo theme looks like:\r\n\r\n    themes \r\n          \\_ my theme\r\n                     \\_ about.markdown\r\n                     \\_ images\r\n                     \\_ layouts\r\n                               \\_ default.html.erb\r\n                     \\_ preview.png\r\n                     \\_ stylesheets\r\n                                   \\_ style.css\r\n\r\nYour main file is in `layouts/default.html.erb`, which is your theme\r\nmain template. This is a simple RHTML file in which you’ll call Typo\r\nmain methods.\r\n\r\n<a name=\"createasimplethemeheader\"></a>\r\n\r\n### Header\r\n\r\nThis is a standard HTML file header, along with some Ruby calls. Nothing\r\ncomplicated at all here.\r\n\r\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\r\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\r\n    <html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"fr\">\r\n    <head profile=\"http://gmpg.org/xfn/11\">\r\n      <title><%= h(page_title) %></title>\r\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n      <meta http-equiv=\"Content-Language\" content=\"fr\" />\r\n\r\n      <%= stylesheet_link_tag \"/stylesheets/theme/style\", :media => ‘all’ %>\r\n      <%= page_header %>\r\n    </head>\r\n\r\nThere are some things you must pay attention to:\r\n\r\n-   `h(page_title)` is the title of the current document. This is\r\n    generated by Typo, and translation in supported languages is done\r\n    when avaliable.\r\n-   `stylesheet_link_tag` is where you call your CSS stylesheet. It will\r\n    always be in `/stylesheets/theme/`. Some call it `style.css`, some\r\n    `application.css`, but do whatever you want.\r\n-   `page_header` with display a page header generated by Typo. It will\r\n    provide:\r\n    -   ICBM tag, for geo localization.\r\n    -   Your meta description.\r\n    -   Your meta keywords.\r\n    -   Your RSD.\r\n    -   URLs for both your RSS and Atom feeds, for automatic discovery.\r\n    -   Stylesheets used by Typo embedded plugins, so that you don’t\r\n        have to care.\r\n    -   Google Analytics tags, if provided.\r\n\r\n<a name=\"createasimplethemebody\"></a>\r\n\r\n### Body\r\n\r\nEvery `div` included here is not mandatory. You just need to care about\r\nthe Ruby calls.\r\n\r\n    <body>\r\n    <div id=\"header\">\r\n      <h1><a href=\"<%= this_blog.base_url %>\"><%= this_blog.blog_name %></a></h1>\r\n      <h2><%= this_blog.blog_subtitle %></h2>\r\n    </div>\r\n\r\n    <div id=\"page\">\r\n      <div id=\"content\">\r\n        <%= yield %>\r\n      </div>\r\n\r\n      <div id=\"sidebar\">\r\n        <%= render_sidebars %>\r\n      </div>\r\n    </div>\r\n    </body>\r\n    </html>\r\n\r\nThe importants things are:\r\n\r\n-   `this_blog.base_url` is your blog URL defined in your settings.\r\n-   `this_blog.name` is your blog title, defined in your settings.\r\n-   `this_blog.blog_subtitle` is your blog tagline, defined in your\r\n    settings.\r\n-   `yield` is the most important part of your layout. It renders the\r\n    page main content according to what you’re browsing (articles, tags,\r\n    categories…)\r\n-   `render_sidebars` displays your sdebar made of Typo plugins.\r\n\r\nHere you are. You can now build a standard Typo theme and profit from\r\nthe great things Typo can provide.\r\n\r\n<a name=\"advancedthemecreation\"></a>\r\n\r\nAdvanced theme cration\r\n----------------------\r\n\r\nTypo offers custom post type. Let’s say you blog about tech and wine,\r\nand want to display wine posts differently. You upload an attached\r\npicture to every wine related post and want it to be displayed in every\r\narticle. You also have a custom CSS for wine blocks, and don’t want\r\npeople to comment on your wine reviews (this is to make the sample template\r\nmore readable). You also want to apply this to the category page.\r\n\r\n<a name=\"advancedthemecreationpavethepath\"></a>\r\n\r\n### Pave the path\r\n\r\nFirst, login to your blog admin and go to Article &#8594; Post Types.\r\nCreate a new post type called Wine.\r\n\r\nNow, create a new category in Articles &#8594; Categories. We’ll call it\r\nWine too.\r\n\r\n<a name=\"advancedthemecreationcreatetemplate\"></a>\r\n\r\n### Create the templates\r\n\r\nCreate two custom templates: one to display wine related articles, and one\r\nto display the Wine category.\r\n\r\nFirst, create a template called `wine.html.erb` in your\r\n`theme/views/articles/` directory. If the `views/articles` directory\r\ndoesn’t exist, create it. The template will probably look like something\r\nlike this:\r\n\r\n    <div class=\"wine\" %>>\r\n      <h2><%= link_to_permalink @article, @article.title %></h2>\r\n      <p class=\"auth\"><%= _(\"Posted by\")%> <%= author_link(@article) %>\r\n      <%= display_date_and_time @article.published_at %></p>\r\n      <%= @article.html(:body) %>\r\n      <!-- This display the attached images -->\r\n      <% @article.resources.each do |upload| %>\r\n        <img src='<%= \"#{this_blog.base_url}/files/#{upload.filename}\" %>' class=\"centered\" />\r\n      <% end %>\r\n      <div class=\"extended\">\r\n        <%= @article.html(:extended) %>\r\n      </div>\r\n\r\n    </div>\r\n    <p class=\"meta\">\r\n      <%= article_links @article %>\r\n    </p>\r\n\r\nDo the same with the wine category. In your theme `/views/categories`,\r\ncreate a `wine.html.erb` template. This is adapted from the\r\n`category/show.html.erb` of one of the stock themes.\r\n\r\n    <h1><%= link_to \"Wine\", \"#{this_blog.base_url}/category/#{params[:id]}\" %></h1>\r\n\r\n    <div class='category-excerpt <%= \"border\" if @article_counter >= 0 %>' id=\"article-<%= article.id %>\">\r\n\r\n    <% @articles.each do |article| %>\r\n      <h2><%= link_to_permalink(article, article.title) %></h2>\r\n      <p class=\"auth\"><%= _(\"Posted by\")%> <%= author_link(earticle) %>\r\n      <%= display_date_and_time article.published_at %></p>\r\n      <%= article.html(:body) %>\r\n      <!-- This display the attached images -->\r\n      <% article.resources.each do |upload| %>\r\n        <img src='<%= \"#{this_blog.base_url}/files/#{upload.filename}\" %>' class=\"centered\" />\r\n      <% end %>\r\n      <div class=\"extended\">\r\n        <%= article.html(:extended) %>\r\n      </div>\r\n    <% end %>\r\n    </div>\r\n\r\n    <div id='paginate'>\r\n      <%= paginate @articles, { :previous_label => _('Previous'), :next_label => _('Next')  } %>\r\n    </div>\r\n\r\nHere you are, you can now write about wine. Just don’t forget to choose\r\nthe wine post type within the editor.\r\n\r\n<a name=\"advancedplugins\"></a>\r\n\r\nAdvanced plugins\r\n----------------\r\n\r\n<a name=\"advancedplugins-createtheplugin\"></a>\r\n\r\n### Create the plugin\r\n\r\nAs Typo plugins are just plain Rails plugins, creation is kinda trivial.\r\n\r\n    ./script/rails generate plugin typo_sample_plugin\r\n\r\nCreate some folders to reflect a Rails application tree:\r\n\r\n    cd vendor/plugins/typo_sample_plugin\r\n    mkdir -p app/controllers/admin app/models app/helpers/admin config app/views/admin\r\n\r\n<a name=\"advancedplugins-makeyourcodeaccessible\"></a>\r\n\r\n### Make your code accessible\r\n\r\nMmake Typo access your code. Edit your `init.rb` file and add the\r\nfollowing:\r\n\r\n    PLUGIN_NAME = 'typo_sample_plugin'\r\n    PLUGIN_PATH = \"#{::Rails.root.to_s}/vendor/plugins/#{PLUGIN_NAME}\"\r\n    PLUGIN_CONTROLLER_PATH = \"#{PLUGIN_PATH}/app/controllers\"\r\n    PLUGIN_VIEWS_PATH = \"#{PLUGIN_PATH}/app/views\"\r\n    PLUGIN_HELPER_PATH = \"#{PLUGIN_PATH}/app/helpers\"\r\n    PLUGIN_MODELS_PATH = \"#{PLUGIN_PATH}/app/models\" \r\n\r\n    config.autoload_paths += %W(#{TypoSamplePlugin::PLUGIN_CONTROLLER_PATH}  \r\n                                #{TypoSamplePlugin::PLUGIN_HELPER_PATH}      \r\n                                #{TypoSamplePlugin::PLUGIN_VIEWS_PATH}       \r\n                                #{TypoSamplePlugin::PLUGIN_MODELS_PATH}\r\n\r\n    ActionView::Base.send(:include, TypoSamplePlugin::Helper)\r\n\r\n<a name=\"advancedplugins-therouting\"></a>\r\n\r\n### The routing\r\n\r\nUnless Rails generators, your plugin won’t be allowed to change\r\nroutes.rb. We want our end users to remove them if they don’t want them\r\nanymore. So we’re going to create our own `config/routes.rb`. It’s going\r\nto look like this:\r\n\r\n    ActionController::Routing::Routes.draw do |map|\r\n      map.connect 'sample_plugin/:action', :controller => 'typo_sample', :action => 'index'\r\n\r\n      %w{ sample_plugin }.each do |i|\r\n        map.connect \"/admin/#{i}\", :controller => \"admin/#{i}\", :action => 'index'\r\n        map.connect \"/admin/#{i}/:action/:id\", :controller => \"admin/#{i}\", :action => nil, :id => nil\r\n      end\r\n    end\r\n\r\nI know, we’re still using Rails 2 routing DSL. It’s bad but Rails 3\r\ncan’t handle everything we do.\r\n\r\nThe first block is for your frontend controllers, the second one for the\r\nadmin. Easy as pie isn’t it?\r\n\r\n<a name=\"advancedplugins-themodels\"></a>\r\n\r\n### The models\r\n\r\nAdd your models files in app/models exactly like on any Rails\r\napplication. You can use any Active Record relations you want and access\r\nor extend existing Typo models.\r\n\r\nTo create your database schema, edit your `init.rb` file, and add the\r\nfollowing code:\r\n\r\n    unless ::TypoSamplePlugin.table_exists?\r\n      ActiveRecord::Schema.create_table(TypoSamplePlugin.table_name) do |t|\r\n        t.column :name,  :string\r\n        t.column :description,  :text\r\n      end\r\n    end\r\n\r\n<a name=\"advancedplugins-thefront\"></a>\r\n\r\n### The front\r\n\r\n<a name=\"advancedplugins-thefront-controllers\"></a>\r\n\r\n#### Controllers\r\n\r\nTo be able to display your content within your Typo blog layout, every\r\nfront end controller will need the following code:\r\n\r\n    class TypoSamplePluginController < ActionController::Base \r\n      unloadable\r\n      layout :theme_layout\r\n      before_filter :template_root\r\n\r\n      def template_root\r\n        self.class.view_paths = ::ActionController::Base.view_paths.dup.unshift(TypoSamplePlugin::PLUGIN_VIEWS_PATH)\r\n      end\r\n\r\n      def theme_layout\r\n        File.join(\"#{::Rails.root.to_s}/themes/#{Blog.default.theme}/views\", Blog.default.current_theme.layout(self.action_name))\r\n      end\r\n\r\n    end\r\n\r\nThere’s certainly a cleaner way to do it by not repeating the code, but\r\nI’ll dig into it later.\r\n\r\n<a name=\"advancedplugins-thefront-views\"></a>\r\n\r\n#### Views\r\n\r\nNothing special here. Really.\r\n\r\n<a name=\"advancedplugins-theadmin\"></a>\r\n\r\n### The admin\r\n\r\nOK, now you want to give your plugin a fancy back office? Let’s go.\r\n\r\n<a name=\"advancedplugins-theadmin-add-your-module\"></a>\r\n\r\n#### Add your modules to the admim\r\n\r\nEdit your `init.rb`. In your model creation block, add the following:\r\n\r\n    admin = Profile.find_by_label('admin')\r\n    admin.modules << :typosampleplugin\r\n    admin.save\r\n\r\n    publisher = Profile.find_by_label('publisher')\r\n    publisher.modules << :typosampleplugin\r\n    publisher.save    \r\n\r\nThis will update both admin and publisher profiles giving them the\r\nrights to access your plugin admin.\r\n\r\nAdd them to the access control list (and the menu as well). This is\r\nstill in init.rb\r\n\r\n    AccessControl.map :require => [ :admin, :publisher, :contributor ]  do |map|\r\n      map.project_module :typosampleplugin, nil do |project|\r\n        project.menu    \"My plugin meny\",  { :controller => \"admin/typo_sample_plugin\" }\r\n        project.submenu \"My submenu\", {:controller => \"admin/typo_sample_plugin_other\" }\r\n      end\r\n    end\r\n\r\nEdit your lib/typo\\_sample\\_plugin.rb and add the following:\r\n\r\n    module Helper\r\n      def class_typosampleplugin\r\n      return class_selected_tab if controller.controller_name  =~ /typo_sample_plugin/\r\n      class_tab  \r\n      end\r\n    end\r\n\r\nThis allows you to manage the tabs highlight in the admin.\r\n\r\n<a name=\"advancedplugins-theadmin-controllers\"></a>\r\n\r\n#### Controllers\r\n\r\nYour controllers will go to `app/controllers/admin` and will all look\r\nlike this, pretty like normal admin controllers:\r\n\r\n    module Admin; end\r\n\r\n    class Admin::TypoSamplePluginController < Admin::BaseController\r\n      layout 'administration'\r\n      unloadable\r\n\r\n        ...\r\n    end\r\n\r\n<a name=\"advancedplugins-theadmin-views\"></a>\r\n\r\n#### Views\r\n\r\nTypo plugins admin views look like normal admin views. Minimum code is:\r\n\r\n    <% @page_heading = _('Sample plugin') %>\r\n    <% subtabs_for(:typosampleplugin) %>\r\n\r\nYou can access any admin helper like save\\_or\\_cancel or link\\_to\\_new.\r\n\r\n<a name=\"usefullinks\"></a>\r\n\r\nUseful links\r\n------------\r\n\r\n<a name=\"enhanceyourblog\"></a>\r\n\r\n### Enhance your blog\r\n\r\n-   [Sidebar Plugins](https://github.com/fdv/typo/wiki/Sidebar-plugins)\r\n-   [In page Plugins](https://github.com/fdv/typo/wiki/In-Page-Plugins)\r\n\r\n<a name=\"moreresources\"></a>\r\n\r\n### More resources:\r\n\r\n-   [Download Typo source code](http://typosphere.org/stable.tgz)\r\n-   [**Report a bug**](https://github.com/fdv/typo/issues)\r\n-   [**Frequently Asked\r\n    Questions**](http://wiki.github.com/fdv/typo/frequently-asked-questions)\r\n-   [Official Typo blog](http://blog.typosphere.org)\r\n-   [Follow us on Twitter](https://twitter.com/gettypo)\r\n\r\n<a name=\"support\"></a>\r\n\r\n### Support\r\n\r\nIf you need help or want to contribute to Typo, you should start with\r\nthe following:\r\n\r\n-   IRC: \\#typo on irc.freenode.net\r\n-   [Mailing list](http://rubyforge.org/mailman/listinfo/typo-list)\r\n\r\n<a name=\"maintainers\"></a>\r\n\r\nMaintainers\r\n-----------\r\n\r\n[![](https://codeclimate.com/badge.png)](https://codeclimate.com/github/fdv/typo)\r\n\r\nThis is a list of Typo maintainers. If you have committed, please add\r\nyour name and contact details to the list.\r\n\r\n**Frédéric de Villamil** <frederic@typosphere.org>\r\nblog: http://t37.net\r\nirc: neuro`\r\n\r\n**Matijs van Zuijlen**\r\nblog: http://www.matijs.net/blog/\r\nirc: matijs\r\n\r\n**Thomas Lecavelier**\r\nblog: http://blog.ookook.fr/\r\nirc: ook\r\n\r\n**Yannick François**\r\nblog: http://elsif.fr\r\nirc: yaf\r\n\r\nAnd [many more cool people who’ve one day or another contributed to\r\nTypo](https://github.com/fdv/typo/graphs/contributors).\r\n\r\n**Original Author: Tobias Luetke**\r\nblog: http://blog.leetsoft.com/\r\nirc: xal\r\n\r\nEnjoy,\r\nThe Typo team\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}